//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace Find_the_number.ScoreService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScoreEntry", Namespace="http://schemas.datacontract.org/2004/07/ScoreService")]
    public partial class ScoreEntry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        private int ScoreField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ScoreService.IScoreService")]
    public interface IScoreService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScoreService/GetLeaderboard", ReplyAction="http://tempuri.org/IScoreService/GetLeaderboardResponse")]
        System.IAsyncResult BeginGetLeaderboard(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Find_the_number.ScoreService.ScoreEntry> EndGetLeaderboard(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScoreService/AddScore", ReplyAction="http://tempuri.org/IScoreService/AddScoreResponse")]
        System.IAsyncResult BeginAddScore(string name, int score, System.AsyncCallback callback, object asyncState);
        
        bool EndAddScore(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IScoreServiceChannel : Find_the_number.ScoreService.IScoreService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLeaderboardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLeaderboardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Find_the_number.ScoreService.ScoreEntry> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Find_the_number.ScoreService.ScoreEntry>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddScoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddScoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScoreServiceClient : System.ServiceModel.ClientBase<Find_the_number.ScoreService.IScoreService>, Find_the_number.ScoreService.IScoreService {
        
        private BeginOperationDelegate onBeginGetLeaderboardDelegate;
        
        private EndOperationDelegate onEndGetLeaderboardDelegate;
        
        private System.Threading.SendOrPostCallback onGetLeaderboardCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddScoreDelegate;
        
        private EndOperationDelegate onEndAddScoreDelegate;
        
        private System.Threading.SendOrPostCallback onAddScoreCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ScoreServiceClient() {
        }
        
        public ScoreServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ScoreServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScoreServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScoreServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetLeaderboardCompletedEventArgs> GetLeaderboardCompleted;
        
        public event System.EventHandler<AddScoreCompletedEventArgs> AddScoreCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Find_the_number.ScoreService.IScoreService.BeginGetLeaderboard(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLeaderboard(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Find_the_number.ScoreService.ScoreEntry> Find_the_number.ScoreService.IScoreService.EndGetLeaderboard(System.IAsyncResult result) {
            return base.Channel.EndGetLeaderboard(result);
        }
        
        private System.IAsyncResult OnBeginGetLeaderboard(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Find_the_number.ScoreService.IScoreService)(this)).BeginGetLeaderboard(callback, asyncState);
        }
        
        private object[] OnEndGetLeaderboard(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Find_the_number.ScoreService.ScoreEntry> retVal = ((Find_the_number.ScoreService.IScoreService)(this)).EndGetLeaderboard(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLeaderboardCompleted(object state) {
            if ((this.GetLeaderboardCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLeaderboardCompleted(this, new GetLeaderboardCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLeaderboardAsync() {
            this.GetLeaderboardAsync(null);
        }
        
        public void GetLeaderboardAsync(object userState) {
            if ((this.onBeginGetLeaderboardDelegate == null)) {
                this.onBeginGetLeaderboardDelegate = new BeginOperationDelegate(this.OnBeginGetLeaderboard);
            }
            if ((this.onEndGetLeaderboardDelegate == null)) {
                this.onEndGetLeaderboardDelegate = new EndOperationDelegate(this.OnEndGetLeaderboard);
            }
            if ((this.onGetLeaderboardCompletedDelegate == null)) {
                this.onGetLeaderboardCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLeaderboardCompleted);
            }
            base.InvokeAsync(this.onBeginGetLeaderboardDelegate, null, this.onEndGetLeaderboardDelegate, this.onGetLeaderboardCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Find_the_number.ScoreService.IScoreService.BeginAddScore(string name, int score, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddScore(name, score, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Find_the_number.ScoreService.IScoreService.EndAddScore(System.IAsyncResult result) {
            return base.Channel.EndAddScore(result);
        }
        
        private System.IAsyncResult OnBeginAddScore(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            int score = ((int)(inValues[1]));
            return ((Find_the_number.ScoreService.IScoreService)(this)).BeginAddScore(name, score, callback, asyncState);
        }
        
        private object[] OnEndAddScore(System.IAsyncResult result) {
            bool retVal = ((Find_the_number.ScoreService.IScoreService)(this)).EndAddScore(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddScoreCompleted(object state) {
            if ((this.AddScoreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddScoreCompleted(this, new AddScoreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddScoreAsync(string name, int score) {
            this.AddScoreAsync(name, score, null);
        }
        
        public void AddScoreAsync(string name, int score, object userState) {
            if ((this.onBeginAddScoreDelegate == null)) {
                this.onBeginAddScoreDelegate = new BeginOperationDelegate(this.OnBeginAddScore);
            }
            if ((this.onEndAddScoreDelegate == null)) {
                this.onEndAddScoreDelegate = new EndOperationDelegate(this.OnEndAddScore);
            }
            if ((this.onAddScoreCompletedDelegate == null)) {
                this.onAddScoreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddScoreCompleted);
            }
            base.InvokeAsync(this.onBeginAddScoreDelegate, new object[] {
                        name,
                        score}, this.onEndAddScoreDelegate, this.onAddScoreCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Find_the_number.ScoreService.IScoreService CreateChannel() {
            return new ScoreServiceClientChannel(this);
        }
        
        private class ScoreServiceClientChannel : ChannelBase<Find_the_number.ScoreService.IScoreService>, Find_the_number.ScoreService.IScoreService {
            
            public ScoreServiceClientChannel(System.ServiceModel.ClientBase<Find_the_number.ScoreService.IScoreService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetLeaderboard(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetLeaderboard", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Find_the_number.ScoreService.ScoreEntry> EndGetLeaderboard(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Find_the_number.ScoreService.ScoreEntry> _result = ((System.Collections.ObjectModel.ObservableCollection<Find_the_number.ScoreService.ScoreEntry>)(base.EndInvoke("GetLeaderboard", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddScore(string name, int score, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = name;
                _args[1] = score;
                System.IAsyncResult _result = base.BeginInvoke("AddScore", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddScore(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddScore", _args, result)));
                return _result;
            }
        }
    }
}
